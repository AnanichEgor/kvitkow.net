/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";


/**
 * @interface
 * An interface representing AccessRight.
 */
export interface AccessRight {
  /**
   * @member {number} id
   */
  id: number;
  /**
   * @member {string} [name]
   */
  name?: string;
}

/**
 * @interface
 * An interface representing Feature.
 */
export interface Feature {
  /**
   * @member {number} id
   */
  id: number;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {AccessRight[]} [availableAccessRights]
   */
  availableAccessRights?: AccessRight[];
}

/**
 * @interface
 * An interface representing EditFeatureRequest.
 */
export interface EditFeatureRequest {
  /**
   * @member {number} featureId
   */
  featureId: number;
  /**
   * @member {number[]} [rightsIds]
   */
  rightsIds?: number[];
}

/**
 * @interface
 * An interface representing AccessFunction.
 */
export interface AccessFunction {
  /**
   * @member {number} id
   */
  id: number;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {number} featureId
   */
  featureId: number;
  /**
   * @member {AccessRight[]} [accessRights]
   */
  accessRights?: AccessRight[];
}

/**
 * @interface
 * An interface representing AddFunctionRequest.
 */
export interface AddFunctionRequest {
  /**
   * @member {string} [functionName]
   */
  functionName?: string;
  /**
   * @member {number} featureId
   */
  featureId: number;
}

/**
 * @interface
 * An interface representing EditFunctionRequest.
 */
export interface EditFunctionRequest {
  /**
   * @member {number} functionId
   */
  functionId: number;
  /**
   * @member {number[]} [rightIds]
   */
  rightIds?: number[];
}

/**
 * @interface
 * An interface representing Role.
 */
export interface Role {
  /**
   * @member {number} id
   */
  id: number;
  /**
   * @member {string} [name]
   */
  name?: string;
  /**
   * @member {AccessRight[]} [accessRights]
   */
  accessRights?: AccessRight[];
  /**
   * @member {AccessRight[]} [deniedRights]
   */
  deniedRights?: AccessRight[];
  /**
   * @member {AccessFunction[]} [accessFunctions]
   */
  accessFunctions?: AccessFunction[];
}

/**
 * @interface
 * An interface representing EditRoleRequest.
 */
export interface EditRoleRequest {
  /**
   * @member {number} roleId
   */
  roleId: number;
  /**
   * @member {number[]} [functionIds]
   */
  functionIds?: number[];
  /**
   * @member {number[]} [accessRightsIds]
   */
  accessRightsIds?: number[];
  /**
   * @member {number[]} [deniedRightsIds]
   */
  deniedRightsIds?: number[];
}

/**
 * @interface
 * An interface representing UserRights.
 */
export interface UserRights {
  /**
   * @member {string} [userId]
   */
  userId?: string;
  /**
   * @member {string} [userLogin]
   */
  userLogin?: string;
  /**
   * @member {AccessRight[]} [accessRights]
   */
  accessRights?: AccessRight[];
  /**
   * @member {AccessRight[]} [deniedRights]
   */
  deniedRights?: AccessRight[];
  /**
   * @member {AccessFunction[]} [accessFunctions]
   */
  accessFunctions?: AccessFunction[];
  /**
   * @member {Role[]} [roles]
   */
  roles?: Role[];
}

/**
 * @interface
 * An interface representing EditUserRightsRequest.
 */
export interface EditUserRightsRequest {
  /**
   * @member {string} [userId]
   */
  userId?: string;
  /**
   * @member {number[]} [roleIds]
   */
  roleIds?: number[];
  /**
   * @member {number[]} [functionIds]
   */
  functionIds?: number[];
  /**
   * @member {number[]} [accessedRightsIds]
   */
  accessedRightsIds?: number[];
  /**
   * @member {number[]} [deniedRightsIds]
   */
  deniedRightsIds?: number[];
}

/**
 * @interface
 * An interface representing CheckAccessRequest.
 */
export interface CheckAccessRequest {
  /**
   * @member {string} [userId]
   */
  userId?: string;
  /**
   * @member {string[]} [accessRightNames]
   */
  accessRightNames?: string[];
}

/**
 * @interface
 * An interface representing SecurityOptions.
 * @extends ServiceClientOptions
 */
export interface SecurityOptions extends ServiceClientOptions {
  /**
   * @member {string} [baseUri]
   */
  baseUri?: string;
}

/**
 * @interface
 * An interface representing FeatureGetFeaturesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface FeatureGetFeaturesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [mask]
   */
  mask?: string;
}

/**
 * @interface
 * An interface representing FunctionsGetFunctionsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface FunctionsGetFunctionsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [mask]
   */
  mask?: string;
}

/**
 * @interface
 * An interface representing RightsGetRightsOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RightsGetRightsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [mask]
   */
  mask?: string;
}

/**
 * @interface
 * An interface representing RoleGetRolesOptionalParams.
 * Optional Parameters.
 *
 * @extends RequestOptionsBase
 */
export interface RoleGetRolesOptionalParams extends msRest.RequestOptionsBase {
  /**
   * @member {string} [mask]
   */
  mask?: string;
}

/**
 * Contains response data for the getFeatures operation.
 */
export type FeatureGetFeaturesResponse = Array<Feature> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Feature[];
    };
};

/**
 * Contains response data for the addFeature operation.
 */
export type FeatureAddFeatureResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the editFeature operation.
 */
export type FeatureEditFeatureResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the deleteFeature operation.
 */
export type FeatureDeleteFeatureResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the getFunctions operation.
 */
export type FunctionsGetFunctionsResponse = Array<AccessFunction> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessFunction[];
    };
};

/**
 * Contains response data for the addFunction operation.
 */
export type FunctionsAddFunctionResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the editFunction operation.
 */
export type FunctionsEditFunctionResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the deleteFunction operation.
 */
export type FunctionsDeleteFunctionResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the getRights operation.
 */
export type RightsGetRightsResponse = Array<AccessRight> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AccessRight[];
    };
};

/**
 * Contains response data for the addRights operation.
 */
export type RightsAddRightsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the deleteRight operation.
 */
export type RightsDeleteRightResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the getRoles operation.
 */
export type RoleGetRolesResponse = Array<Role> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: Role[];
    };
};

/**
 * Contains response data for the addRole operation.
 */
export type RoleAddRoleResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the editRole operation.
 */
export type RoleEditRoleResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the deleteRole operation.
 */
export type RoleDeleteRoleResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the getUserRights operation.
 */
export type UserRightsGetUserRightsResponse = UserRights & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserRights;
    };
};

/**
 * Contains response data for the editUserRights operation.
 */
export type UserRightsEditUserRightsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};

/**
 * Contains response data for the checkUserRights operation.
 */
export type UserRightsCheckUserRightsResponse = {
  /**
   * The parsed response body.
   */
  body: boolean;
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;
      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: boolean;
    };
};
