// <auto-generated />
using System;
using Dashboard.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dashboard.Data.Migrations
{
    [DbContext(typeof(DashboardContext))]
    [Migration("20190203152125_StringId")]
    partial class StringId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("Dashboard.Data.DbModels.NewsDb", b =>
                {
                    b.Property<string>("NewsId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("EventLink");

                    b.Property<int>("Status");

                    b.Property<int>("TypeEvent");

                    b.HasKey("NewsId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Dashboard.Data.DbModels.TicketInfoDb", b =>
                {
                    b.Property<string>("TicketId");

                    b.Property<string>("EventLink");

                    b.Property<string>("LocationEvent");

                    b.Property<string>("Name");

                    b.Property<string>("NewsDbNewsId");

                    b.Property<decimal>("Price");

                    b.Property<string>("SellerPhone");

                    b.HasKey("TicketId");

                    b.HasIndex("NewsDbNewsId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("Dashboard.Data.DbModels.UserInfoDb", b =>
                {
                    b.Property<string>("UserInfoDbId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("NewsDbNewsId");

                    b.Property<double?>("Rating");

                    b.HasKey("UserInfoDbId");

                    b.HasIndex("NewsDbNewsId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Dashboard.Data.DbModels.TicketInfoDb", b =>
                {
                    b.HasOne("Dashboard.Data.DbModels.NewsDb", "NewsDb")
                        .WithMany()
                        .HasForeignKey("NewsDbNewsId");

                    b.HasOne("Dashboard.Data.DbModels.NewsDb")
                        .WithOne("TicketInfoDb")
                        .HasForeignKey("Dashboard.Data.DbModels.TicketInfoDb", "TicketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Dashboard.Data.DbModels.UserInfoDb", b =>
                {
                    b.HasOne("Dashboard.Data.DbModels.NewsDb", "NewsDb")
                        .WithMany()
                        .HasForeignKey("NewsDbNewsId");

                    b.HasOne("Dashboard.Data.DbModels.NewsDb")
                        .WithOne("UserInfoDb")
                        .HasForeignKey("Dashboard.Data.DbModels.UserInfoDb", "UserInfoDbId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
