// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserSettings.Data.Context;

namespace UserSettings.Data.Migrations
{
    [DbContext(typeof(SettingsContext))]
    [Migration("20190121193407_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("UserSettings.Data.DbModels.AccountDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("UserSettings.Data.DbModels.ProfileDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsGetTicketInfo");

                    b.Property<bool>("IsPrivateAccount");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("PreferAddress");

                    b.Property<string>("PreferPlace");

                    b.Property<string>("PreferRegion");

                    b.Property<byte[]>("UserImage");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("UserSettings.Data.DbModels.SettingsDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountId");

                    b.Property<int?>("ProfileId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("UserSettings.Data.DbModels.SettingsDb", b =>
                {
                    b.HasOne("UserSettings.Data.DbModels.AccountDb", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("UserSettings.Data.DbModels.ProfileDb", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId");
                });
#pragma warning restore 612, 618
        }
    }
}
